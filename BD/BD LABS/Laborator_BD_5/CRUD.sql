USE LAB5_FARMACIE
GO

-- TABELE: FARMCIE_DETALII MEDICAMENTE MEDIACMENTE_ TRANZACTII TRANZZACTIE CUMPARATORI

-- VALIDARI 
CREATE OR ALTER FUNCTION VALIDARE_STRING(@string NVARCHAR(MAX), @lungime INT)
RETURNS BIT AS
BEGIN
	IF len(@string) <= 0 OR len(@string) > @lungime or @string is null
		return 0;
	return 1;
END
GO

------------------------------------------------------------------------------------------------------------------------
-- CRUD FARMACIE_DETALII
-- INSERT
GO

CREATE OR ALTER PROCEDURE INSERT_FARMACIE_DETALII
	@nume NVARCHAR(50),
	@descriere NVARCHAR(100)
AS
BEGIN
	
	IF dbo.VALIDARE_STRING(@nume, 50) = 1 AND dbo.VALIDARE_STRING(@descriere,100) = 1
	BEGIN
		INSERT INTO FARMACIE_DETALII(Nume,Locatie) VALUES (@nume, @descriere);
		PRINT 'FARMCIE INTRODUSA CU SUCCES'
		RETURN;
	END
		PRINT 'INSERARE ESUATA, VERIFICA DATELE!';
END
GO
-- DELETE
CREATE OR ALTER PROCEDURE DELETE_FARMACIE_DETALII
	@idFarmacie INT
AS
BEGIN
	IF EXISTS (SELECT 1 FROM MEDICAMENTE WHERE MEDICAMENTE.FarmacieId = @idFarmacie)
	BEGIN
		PRINT 'EXISTA MEDICAMENTE ASOCIATE CU FARMACIA IN MEDICAMENTE!';
		RETURN;
	END
	DELETE FROM FARMACIE_DETALII WHERE FARMACIE_DETALII.FarmacieId = @idFarmacie;
	PRINT 'SUCCES LA STERGERE FARMACIE!';
END
GO
--UPDATE
CREATE OR ALTER PROCEDURE UPDATE_FARMACIE_DETALII
	@locatieUpdated NVARCHAR(100),
	@idFarmacie INT
AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM FARMACIE_DETALII WHERE FARMACIE_DETALII.FarmacieId = @idFarmacie)
	BEGIN
		PRINT 'NU S-A GASIT FARMACIA';
		RETURN;
	END

	IF dbo.VALIDARE_STRING(@locatieUpdated,100) = 1
	BEGIN
		UPDATE FARMACIE_DETALII SET Locatie = @locatieUpdated WHERE FarmacieId = @idFarmacie;
		PRINT 'S-A ACTUALIZAT CU SUCCES!';
		RETURN;
	END
	PRINT 'NU ESTE O LOCATIE VALIDA!';
END
GO

--READ

CREATE OR ALTER PROCEDURE READ_FARMACIE_DETALII
	@idFarmacie INT
AS
BEGIN
	SELECT FD.Nume, FD.Locatie FROM FARMACIE_DETALII AS FD WHERE FD.FarmacieId = @idFarmacie;
END
GO
----------------------------------------------------------------------------------------------------------------


-- CRUD CUMPARATORI

-- INSERT 
CREATE OR ALTER PROCEDURE INSERT_CUMPARATORI
	@nume NVARCHAR(50),
	@data_nasterii DATE
AS 
BEGIN
	IF @data_nasterii > GETDATE()
    BEGIN
        PRINT 'DATA NASTERII NU POATE FI IN VIITOR';
        RETURN;
    END
	IF dbo.VALIDARE_STRING(@nume, 50) = 1
	BEGIN
		INSERT INTO CUMPARATORI(Nume,Data_Nasterii) VALUES (@nume, @data_nasterii);
		PRINT 'INSERT CU SUCCES IN CUMPARATORI';
		RETURN;
	END
	PRINT 'INSERARE ESUATA, VERIFICA DATELE!';
END
GO

-- DELETE
CREATE OR ALTER PROCEDURE DELETE_CUMPARATORI
	@idCumparator INT
AS
BEGIN
	IF EXISTS (SELECT 1 FROM TRANZACTIE WHERE @idCumparator = TRANZACTIE.CumparatorId)
	BEGIN
		PRINT 'CUMPARATOR ESTE ASOCIAT IN TRAZACTIE!';
		RETURN
	END
	DELETE FROM CUMPARATORI WHERE @idCumparator = CUMPARATORI.CumparatorId;
	PRINT 'STERGERE CU SUCCES DIN CUMPARATORI';
END
GO

-- UPDATE
CREATE OR ALTER PROCEDURE UPDATE_CUMPARATORI
	@idCumparator INT,
	@numeNou VARCHAR(100),
	@dataNoua DATE
AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM CUMPARATORI WHERE @idCumparator = CUMPARATORI.CumparatorId)
	BEGIN
		PRINT 'NU EXISTA CUMPARATORUL!'
		RETURN;
	END
	UPDATE CUMPARATORI
	SET 
		Nume = CASE WHEN @numeNou IS NOT NULL AND dbo.VALIDARE_STRING(@numeNou,100) = 1 THEN @numeNou
		ELSE Nume
		END,
		Data_Nasterii = CASE WHEN @dataNoua IS NOT NULL AND @dataNoua < GETDATE() THEN @dataNoua
		ELSE Data_Nasterii
		END WHERE CumparatorId = @idCumparator;
	PRINT 'S-A ACTUAIZAT CU SUCCES CUMPARATORUL!'
END
GO
-- READ
CREATE OR ALTER PROCEDURE READ_CUMPARATORI
	@cumparatorId INT
AS
BEGIN
	SELECT C.Nume, C.Data_Nasterii FROM CUMPARATORI AS C WHERE C.CumparatorId = @cumparatorId;
END
GO

-------------------------------------------------------------------------------------------------------------------------------

--CRUD MEDICAMENTE
--INSERT
CREATE OR ALTER PROCEDURE INSERT_MEDICAMENTE
	@nume VARCHAR(50),
	@descriere NVARCHAR (500),
	@pret FLOAT,
	@stoc INT,
	@farmacieId INT
AS
BEGIN
	DECLARE @isValidIndex INT; 
	SELECT @isValidIndex = FD.FarmacieId FROM FARMACIE_DETALII AS FD WHERE FD.FarmacieId = @farmacieId;

	IF dbo.VALIDARE_STRING(@nume,50) = 1 AND dbo.VALIDARE_STRING(@descriere,500) = 1 AND @isValidIndex IS NOT NULL
	BEGIN
		INSERT INTO MEDICAMENTE(Nume,Descriere,Pret,Stoc,FarmacieId) VALUES (@nume,@descriere,@pret,@stoc,@farmacieId);
		PRINT 'INSERT CU SUCCES IN MEDICAMENTE!';
		RETURN;
	END
	PRINT 'INSERARE ESUATA, VERIFICA DATELE!';

END
GO
-- DELETE
CREATE OR ALTER PROCEDURE DELETE_MEDICAMENTE
	@idMedicament INT
AS
BEGIN
	DECLARE @MEDICAMENT_ID INT;
	SELECT @MEDICAMENT_ID = MEDICAMENTE_TRANZACTII.MedicamentId FROM MEDICAMENTE_TRANZACTII WHERE MEDICAMENTE_TRANZACTII.MedicamentId = @idMedicament;
	IF @MEDICAMENT_ID IS NOT NULL
	BEGIN
		PRINT 'STERGE PRIMA DATA DIN MEDICAMENTE_TRANZACTII!'
		RETURN;
	END
	DELETE FROM MEDICAMENTE WHERE @idMedicament = MEDICAMENTE.MedicamentId;
END
GO
--UPDATE
CREATE OR ALTER PROCEDURE UPDATE_MEDICAMENTE
	@medicamentId INT,
	@numeNou VARCHAR(50),
	@descriereNoua NVARCHAR (500),
	@pretNou FLOAT,
	@stocNou INT
AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM MEDICAMENTE WHERE MEDICAMENTE.MedicamentId = @medicamentId)
	BEGIN
		PRINT 'NU EXISTA MEDICAMENTUL!';
		RETURN;
	END
	UPDATE MEDICAMENTE
	SET 
       Nume = CASE WHEN @numeNou IS NOT NULL AND dbo.VALIDARE_STRING(@numeNou, 50) = 1 
           THEN @numeNou 
           ELSE Nume 
       END,
       Descriere = CASE 
           WHEN @descriereNoua IS NOT NULL AND dbo.VALIDARE_STRING(@descriereNoua, 500) = 1 
           THEN @descriereNoua 
           ELSE Descriere 
       END,
       Pret = CASE 
           WHEN @pretNou IS NOT NULL AND @pretNou > 0 
           THEN @pretNou 
           ELSE Pret 
       END,
       Stoc = CASE 
           WHEN @stocNou IS NOT NULL AND @stocNou >= 0 
           THEN @stocNou 
           ELSE Stoc 
       END
   WHERE MedicamentId = @medicamentId;
   PRINT 'S-A ACTUALIZAT CU SUCCES!'
END
GO
-- VIEW
CREATE OR ALTER VIEW VW_MEDICAMENTE_FARMACIE AS 
	SELECT M.Nume, M.Descriere, M.Stoc, M.Pret FROM MEDICAMENTE AS M;
GO
-- INDEX MEDICAMENTE
CREATE NONCLUSTERED INDEX IX_MEDICAMENTE_NUME ON MEDICAMENTE(Nume) INCLUDE (Descriere,Pret,Stoc);
GO

-- SELECT
CREATE OR ALTER PROCEDURE READ_MEDICAMENTE_FARMACIE
	@nume VARCHAR(100)
AS
BEGIN
	IF dbo.VALIDARE_STRING(@nume, 100) = 0
	BEGIN
		PRINT 'NUMELE NU ESTE VALID';
		RETURN;
	END

	SELECT * FROM  VW_MEDICAMENTE_FARMACIE WHERE Nume = @nume ORDER BY Pret DESC;	
END
GO

---------------------------------------------------------------------------------------------------------------------------------------------

-- INSERT
CREATE OR ALTER PROCEDURE INSERT_TRANZACTIE
	@numeMed NVARCHAR(50),
	@cantitate INT,
	@dataTranzactie DATE,
	@cumparatorId INT
AS 
BEGIN
	IF dbo.VALIDARE_STRING(@numeMed, 50) = 1 AND EXISTS (SELECT 1 FROM CUMPARATORI AS C WHERE @cumparatorId = C.CumparatorId)
	BEGIN
			INSERT INTO TRANZACTIE(NumeMed,Cantitate,DataTranzactie,CumparatorId) VALUES (@numeMed, @cantitate, @dataTranzactie, @cumparatorId);
			PRINT 'INSERT CU SUCCES IN TRANZACTIE';
			RETURN;
	END
	PRINT 'INSERARE ESUATA, VERIFICA DATELE!';
END
GO

-- DELETE
CREATE OR ALTER PROCEDURE DELETE_TRANZACTIE
	@idTranzactie INT
AS
BEGIN
	
	IF NOT EXISTS (SELECT 1 FROM TRANZACTIE AS T WHERE T.TranzactieId = @idTranzactie)
	BEGIN
		PRINT 'NU EXISTA TRANZACTIA ASOCIATA!';
		RETURN;
	END
	IF EXISTS (SELECT 1 FROM MEDICAMENTE_TRANZACTII AS MT WHERE MT.TranzactieId = @idTranzactie)
	BEGIN
		PRINT 'TRANZACTIA ASOCIATA IN MT!';
		RETURN;
	END
	DELETE FROM TRANZACTIE WHERE @idTranzactie = TRANZACTIE.TranzactieId;
	PRINT 'DELETE CU SUCCESS DIN TRANZACTIE!'
END
GO

--UPDATE
CREATE OR ALTER PROCEDURE UPDATE_TRANZACTIE
	@tranzactieId INT,
	@numeMedNou NVARCHAR(50),
	@cantitateNou INT,
	@dataTranzactieNou DATE
AS
BEGIN
	IF NOT EXISTS (SELECT 1 FROM TRANZACTIE AS T WHERE T.TranzactieId = @tranzactieId)
	BEGIN
		PRINT 'NU S-A GASIT TRANZACTIA!'
		RETURN;
	END
	UPDATE TRANZACTIE
	SET NumeMed = CASE WHEN @numeMedNou IS NOT NULL AND dbo.VALIDARE_STRING(@numeMedNou, 50) = 1 THEN @numeMedNou
	ELSE NumeMed
	END,
	Cantitate = CASE WHEN @cantitateNou IS NOT NULL AND @cantitateNou >= 0 THEN @cantitateNou
	ELSE Cantitate
	END,
	DataTranzactie = CASE WHEN @dataTranzactieNou IS NOT NULL AND @dataTranzactieNou < GETDATE() THEN @dataTranzactieNou
	ELSE DataTranzactie
	END WHERE @tranzactieId = TRANZACTIE.TranzactieId;
	PRINT 'ACTUALIZARE CU SUCCES';
END

GO
 -- VIEW
CREATE OR ALTER VIEW VW_TRANZACTIE
AS
	SELECT T.NumeMed,T.DataTranzactie,T.Cantitate, T.CumparatorId FROM TRANZACTIE AS T; 
GO
 -- INDEX PE TRANZACTIE
CREATE NONCLUSTERED INDEX IX_DataTranzactie ON TRANZACTIE(dataTranzactie) INCLUDE (NumeMed, Cantitate,CumparatorId)
GO

-- READ
CREATE OR ALTER PROCEDURE READ_TRANZACTIE_CUMPARATOR
	@dataTranzactie date
AS
BEGIN
	SELECT VWT.NumeMed, VWT.DataTranzactie, VWT.Cantitate, VWT.CumparatorId FROM VW_TRANZACTIE AS VWT WHERE @dataTranzactie = VWT.DataTranzactie ORDER BY Cantitate DESC;
END
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------
-- INSERT
CREATE OR ALTER PROCEDURE INSERT_MEDICAMENTE_TRANZACTII
	@MedicamentID INT,
	@TranzactieID INT,
	@cantiate INT
AS
BEGIN
	
	DECLARE @isMedicamentId INT;
	DECLARE @isTranzactie INT;
	DECLARE @pret FLOAT;
		
	SELECT @isMedicamentId = M.MedicamentId, @pret = M.Pret FROM MEDICAMENTE AS M WHERE M.MedicamentId = @MedicamentID;
	SELECT @isTranzactie = T.TranzactieId FROM TRANZACTIE AS T WHERE T.TranzactieId = @TranzactieID;
		
	DECLARE @pretTotal DECIMAL(10,2);
	SET @pretTotal = @cantiate * @pret;
	IF @isMedicamentId IS NOT NULL AND @isTranzactie IS NOT NULL AND @pretTotal IS NOT NULL
	BEGIN
		INSERT INTO MEDICAMENTE_TRANZACTII(MedicamentId,TranzactieId,Cantitate,PretTotal) VALUES (@MedicamentID,@TranzactieID,@cantiate,@pretTotal)
		PRINT 'INSERT CU SUCCES IN TRANZACTIE';
		RETURN;
	END
	PRINT 'INSERARE ESUATA, VERIFICA DATELE!';
END
GO

-- DELETE
CREATE OR ALTER PROCEDURE DELETE_MEDICAMENTE_TRANZACTII
	@idMedicamente INT,
	@idTranzactii INT
AS
BEGIN

	IF NOT EXISTS (SELECT 1 FROM MEDICAMENTE WHERE MEDICAMENTE.MedicamentId = @idMedicamente) OR  NOT EXISTS (SELECT 1 FROM TRANZACTIE WHERE TRANZACTIE.TranzactieId = @idTranzactii)
	BEGIN
		PRINT 'NU SUNT MEDIACAMETE/ TRANZACTII ASOCITATE'
		RETURN;
	END
	DELETE FROM MEDICAMENTE_TRANZACTII WHERE MEDICAMENTE_TRANZACTII.MedicamentId = @idMedicamente AND MEDICAMENTE_TRANZACTII.TranzactieId = @idTranzactii;
	PRINT 'S-A STERS CU SUCCES'
END
GO

-- UPDATE
CREATE OR ALTER PROCEDURE UPDATE_MEDIACAMENTE_TRANZACTII
	@MedicamentID INT,
	@TranzactieID INT,
	@cantiateNoua INT
AS
BEGIN
	DECLARE @pret FLOAT;
	SELECT @pret = M.Pret FROM MEDICAMENTE AS M WHERE M.MedicamentId = @MedicamentID; 
	IF NOT EXISTS (SELECT 1 FROM MEDICAMENTE_TRANZACTII WHERE MEDICAMENTE_TRANZACTII.MedicamentId = @MedicamentID) OR  NOT EXISTS (SELECT 1 FROM MEDICAMENTE_TRANZACTII WHERE MEDICAMENTE_TRANZACTII.TranzactieId = @TranzactieID)
	BEGIN
		PRINT 'NU SUNT MEDIACAMETE/ TRANZACTII ASOCITATE'
		RETURN;
	END
	UPDATE MEDICAMENTE_TRANZACTII
	SET Cantitate = CASE WHEN @cantiateNoua IS NOT NULL THEN @cantiateNoua
		ELSE Cantitate 
	END,
	PretTotal = CASE WHEN @cantiateNoua IS NOT NULL THEN @cantiateNoua * @pret
	ELSE PretTotal END;
	PRINT 'MT S-A ACTUALIZAT CU SUCCESS!';
END
GO

-- VIEW 
CREATE OR ALTER VIEW VW_TRANZACTII_MEDIACMENTE_DETALII
AS
	SELECT M.Nume, M.Descriere, MT.PretTotal, MT.Cantitate, T.DataTranzactie, MT.MedicamentId, MT.TranzactieId FROM MEDICAMENTE AS M INNER JOIN  MEDICAMENTE_TRANZACTII AS MT ON MT.MedicamentId = M.MedicamentId
	INNER JOIN TRANZACTIE AS T ON T.TranzactieId = MT.TranzactieId;
GO

-- INDEX
CREATE NONCLUSTERED INDEX IX_MEDICAMENTE_TRANZACTII ON MEDICAMENTE_TRANZACTII(Cantitate) INCLUDE (PretTotal);
GO

 -- READ
CREATE OR ALTER PROCEDURE READ_TRANZACTII_MEDICAMENTE
	@cantitate INT
AS
BEGIN
	SELECT distinct VWT.Nume, VWT.Descriere, VWT.Cantitate, VWT.PretTotal, VWT.DataTranzactie FROM VW_TRANZACTII_MEDIACMENTE_DETALII AS VWT WHERE @cantitate = VWT.Cantitate;
END



EXEC INSERT_FARMACIE_DETALII 'Help Net', 'Strada Libertatii 15, Bucuresti';
EXEC UPDATE_FARMACIE_DETALII 'Strada A B C', 6
EXEC DELETE_FARMACIE_DETALII 6 
EXEC READ_FARMACIE_DETALII 1
SELECT * FROM FARMACIE_DETALII;

EXEC INSERT_CUMPARATORI 'George Popa', '1995-12-10';
EXEC UPDATE_CUMPARATORI 5, 'Marcel', '1990-10-20'
EXEC DELETE_CUMPARATORI 5
EXEC READ_CUMPARATORI 2;
SELECT * FROM CUMPARATORI;


EXEC INSERT_MEDICAMENTE 'Nurofen', 'Anti-inflamator', 20.75, 80, 2;
EXEC INSERT_MEDICAMENTE 'Aspirina', 'Medicament pentru durere', 15.50, 100, 1;
EXEC INSERT_MEDICAMENTE 'Paracetamol', 'Reduce febra', 10.25, 150, 1;
EXEC INSERT_MEDICAMENTE 'Paracetamol', 'Reduce febra si durerea', 20.25, 10, 1;

EXEC DELETE_MEDICAMENTE 6;
EXEC UPDATE_MEDICAMENTE 6,'Aspirina Forte', 'Medicament pentru durere puternica', 16.50, 90;
EXEC READ_MEDICAMENTE_FARMACIE 'Paracetamol';
SELECT * FROM MEDICAMENTE;

EXEC INSERT_TRANZACTIE 'Nurofen', 1, '2024-01-17', 1;
EXEC INSERT_TRANZACTIE 'Aspirina', 2, '2024-01-15', 1;
EXEC INSERT_TRANZACTIE 'Paracetamol', 3, '2024-01-16', 2;
EXEC INSERT_TRANZACTIE 'Nurofen', 1, '2024-01-17', 1;

EXEC UPDATE_TRANZACTIE 5, 'Aspirina', 3, '2024-01-10';
EXEC DELETE_TRANZACTIE 5;

EXEC READ_TRANZACTIE_CUMPARATOR '2024-01-10';
SELECT * FROM TRANZACTIE;


EXEC INSERT_MEDICAMENTE_TRANZACTII 1, 1, 2;
EXEC INSERT_MEDICAMENTE_TRANZACTII 2, 2, 3;
EXEC INSERT_MEDICAMENTE_TRANZACTII 1, 2, 1;
EXEC INSERT_MEDICAMENTE_TRANZACTII 2, 1, 2;
EXEC READ_TRANZACTII_MEDICAMENTE 2;
EXEC UPDATE_MEDIACAMENTE_TRANZACTII 1, 2, 8;
EXEC DELETE_MEDICAMENTE_TRANZACTII 1,2
SELECT * FROM MEDICAMENTE_TRANZACTII;
